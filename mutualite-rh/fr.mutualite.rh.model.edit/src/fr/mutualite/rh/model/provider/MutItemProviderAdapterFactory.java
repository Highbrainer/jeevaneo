/**
 */
package fr.mutualite.rh.model.provider;

import fr.mutualite.rh.model.util.MutAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MutItemProviderAdapterFactory extends MutAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MutItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Employe} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmployeItemProvider employeItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Employe}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmployeAdapter() {
		if (employeItemProvider == null) {
			employeItemProvider = new EmployeItemProvider(this);
		}

		return employeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Etablissement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EtablissementItemProvider etablissementItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Etablissement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEtablissementAdapter() {
		if (etablissementItemProvider == null) {
			etablissementItemProvider = new EtablissementItemProvider(this);
		}

		return etablissementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Utilisateur} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UtilisateurItemProvider utilisateurItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Utilisateur}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUtilisateurAdapter() {
		if (utilisateurItemProvider == null) {
			utilisateurItemProvider = new UtilisateurItemProvider(this);
		}

		return utilisateurItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Utilisateurs} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UtilisateursItemProvider utilisateursItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Utilisateurs}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUtilisateursAdapter() {
		if (utilisateursItemProvider == null) {
			utilisateursItemProvider = new UtilisateursItemProvider(this);
		}

		return utilisateursItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.EntretienAnnuel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntretienAnnuelItemProvider entretienAnnuelItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.EntretienAnnuel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntretienAnnuelAdapter() {
		if (entretienAnnuelItemProvider == null) {
			entretienAnnuelItemProvider = new EntretienAnnuelItemProvider(this);
		}

		return entretienAnnuelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.EvaluationTenuePoste} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvaluationTenuePosteItemProvider evaluationTenuePosteItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.EvaluationTenuePoste}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvaluationTenuePosteAdapter() {
		if (evaluationTenuePosteItemProvider == null) {
			evaluationTenuePosteItemProvider = new EvaluationTenuePosteItemProvider(this);
		}

		return evaluationTenuePosteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.EvaluationCompetence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvaluationCompetenceItemProvider evaluationCompetenceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.EvaluationCompetence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvaluationCompetenceAdapter() {
		if (evaluationCompetenceItemProvider == null) {
			evaluationCompetenceItemProvider = new EvaluationCompetenceItemProvider(this);
		}

		return evaluationCompetenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.EvaluationSavoirEtre} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvaluationSavoirEtreItemProvider evaluationSavoirEtreItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.EvaluationSavoirEtre}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvaluationSavoirEtreAdapter() {
		if (evaluationSavoirEtreItemProvider == null) {
			evaluationSavoirEtreItemProvider = new EvaluationSavoirEtreItemProvider(this);
		}

		return evaluationSavoirEtreItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Objectif} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectifItemProvider objectifItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Objectif}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectifAdapter() {
		if (objectifItemProvider == null) {
			objectifItemProvider = new ObjectifItemProvider(this);
		}

		return objectifItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.ObjectifPrecedent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectifPrecedentItemProvider objectifPrecedentItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.ObjectifPrecedent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectifPrecedentAdapter() {
		if (objectifPrecedentItemProvider == null) {
			objectifPrecedentItemProvider = new ObjectifPrecedentItemProvider(this);
		}

		return objectifPrecedentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.PhotoEmploye} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhotoEmployeItemProvider photoEmployeItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.PhotoEmploye}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhotoEmployeAdapter() {
		if (photoEmployeItemProvider == null) {
			photoEmployeItemProvider = new PhotoEmployeItemProvider(this);
		}

		return photoEmployeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Affectation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AffectationItemProvider affectationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Affectation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAffectationAdapter() {
		if (affectationItemProvider == null) {
			affectationItemProvider = new AffectationItemProvider(this);
		}

		return affectationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Emploi} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmploiItemProvider emploiItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Emploi}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmploiAdapter() {
		if (emploiItemProvider == null) {
			emploiItemProvider = new EmploiItemProvider(this);
		}

		return emploiItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.AffectationClassification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AffectationClassificationItemProvider affectationClassificationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.AffectationClassification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAffectationClassificationAdapter() {
		if (affectationClassificationItemProvider == null) {
			affectationClassificationItemProvider = new AffectationClassificationItemProvider(this);
		}

		return affectationClassificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Formation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormationItemProvider formationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Formation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormationAdapter() {
		if (formationItemProvider == null) {
			formationItemProvider = new FormationItemProvider(this);
		}

		return formationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.OrganismeFormation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrganismeFormationItemProvider organismeFormationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.OrganismeFormation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrganismeFormationAdapter() {
		if (organismeFormationItemProvider == null) {
			organismeFormationItemProvider = new OrganismeFormationItemProvider(this);
		}

		return organismeFormationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.SessionFormation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SessionFormationItemProvider sessionFormationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.SessionFormation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSessionFormationAdapter() {
		if (sessionFormationItemProvider == null) {
			sessionFormationItemProvider = new SessionFormationItemProvider(this);
		}

		return sessionFormationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.EntretienProfessionnel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntretienProfessionnelItemProvider entretienProfessionnelItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.EntretienProfessionnel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntretienProfessionnelAdapter() {
		if (entretienProfessionnelItemProvider == null) {
			entretienProfessionnelItemProvider = new EntretienProfessionnelItemProvider(this);
		}

		return entretienProfessionnelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.AppreciationSessionFormation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AppreciationSessionFormationItemProvider appreciationSessionFormationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.AppreciationSessionFormation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAppreciationSessionFormationAdapter() {
		if (appreciationSessionFormationItemProvider == null) {
			appreciationSessionFormationItemProvider = new AppreciationSessionFormationItemProvider(this);
		}

		return appreciationSessionFormationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.SouhaitFormationEvaluateur} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SouhaitFormationEvaluateurItemProvider souhaitFormationEvaluateurItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.SouhaitFormationEvaluateur}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSouhaitFormationEvaluateurAdapter() {
		if (souhaitFormationEvaluateurItemProvider == null) {
			souhaitFormationEvaluateurItemProvider = new SouhaitFormationEvaluateurItemProvider(this);
		}

		return souhaitFormationEvaluateurItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.SouhaitFormationSalarie} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SouhaitFormationSalarieItemProvider souhaitFormationSalarieItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.SouhaitFormationSalarie}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSouhaitFormationSalarieAdapter() {
		if (souhaitFormationSalarieItemProvider == null) {
			souhaitFormationSalarieItemProvider = new SouhaitFormationSalarieItemProvider(this);
		}

		return souhaitFormationSalarieItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Mutualite} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MutualiteItemProvider mutualiteItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Mutualite}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMutualiteAdapter() {
		if (mutualiteItemProvider == null) {
			mutualiteItemProvider = new MutualiteItemProvider(this);
		}

		return mutualiteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Etablissements} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EtablissementsItemProvider etablissementsItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Etablissements}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEtablissementsAdapter() {
		if (etablissementsItemProvider == null) {
			etablissementsItemProvider = new EtablissementsItemProvider(this);
		}

		return etablissementsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Emplois} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmploisItemProvider emploisItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Emplois}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmploisAdapter() {
		if (emploisItemProvider == null) {
			emploisItemProvider = new EmploisItemProvider(this);
		}

		return emploisItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Effectif} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EffectifItemProvider effectifItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Effectif}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEffectifAdapter() {
		if (effectifItemProvider == null) {
			effectifItemProvider = new EffectifItemProvider(this);
		}

		return effectifItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.mutualite.rh.model.Organismes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrganismesItemProvider organismesItemProvider;

	/**
	 * This creates an adapter for a {@link fr.mutualite.rh.model.Organismes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrganismesAdapter() {
		if (organismesItemProvider == null) {
			organismesItemProvider = new OrganismesItemProvider(this);
		}

		return organismesItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (employeItemProvider != null) employeItemProvider.dispose();
		if (affectationItemProvider != null) affectationItemProvider.dispose();
		if (emploiItemProvider != null) emploiItemProvider.dispose();
		if (affectationClassificationItemProvider != null) affectationClassificationItemProvider.dispose();
		if (formationItemProvider != null) formationItemProvider.dispose();
		if (organismeFormationItemProvider != null) organismeFormationItemProvider.dispose();
		if (sessionFormationItemProvider != null) sessionFormationItemProvider.dispose();
		if (entretienProfessionnelItemProvider != null) entretienProfessionnelItemProvider.dispose();
		if (appreciationSessionFormationItemProvider != null) appreciationSessionFormationItemProvider.dispose();
		if (souhaitFormationEvaluateurItemProvider != null) souhaitFormationEvaluateurItemProvider.dispose();
		if (souhaitFormationSalarieItemProvider != null) souhaitFormationSalarieItemProvider.dispose();
		if (mutualiteItemProvider != null) mutualiteItemProvider.dispose();
		if (etablissementsItemProvider != null) etablissementsItemProvider.dispose();
		if (emploisItemProvider != null) emploisItemProvider.dispose();
		if (effectifItemProvider != null) effectifItemProvider.dispose();
		if (organismesItemProvider != null) organismesItemProvider.dispose();
		if (etablissementItemProvider != null) etablissementItemProvider.dispose();
		if (utilisateurItemProvider != null) utilisateurItemProvider.dispose();
		if (utilisateursItemProvider != null) utilisateursItemProvider.dispose();
		if (entretienAnnuelItemProvider != null) entretienAnnuelItemProvider.dispose();
		if (evaluationTenuePosteItemProvider != null) evaluationTenuePosteItemProvider.dispose();
		if (evaluationCompetenceItemProvider != null) evaluationCompetenceItemProvider.dispose();
		if (evaluationSavoirEtreItemProvider != null) evaluationSavoirEtreItemProvider.dispose();
		if (objectifItemProvider != null) objectifItemProvider.dispose();
		if (objectifPrecedentItemProvider != null) objectifPrecedentItemProvider.dispose();
		if (photoEmployeItemProvider != null) photoEmployeItemProvider.dispose();
	}

}
